/** @jsxImportSource @emotion/react */
import React, { useState } from 'react'
// ***** CSS ****
import emotionReset from 'emotion-reset'
import { Global, css } from '@emotion/react'
// ***** „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ ****
import { useSpring, useSprings } from 'react-spring'
import { useDrag } from 'react-use-gesture'
// ***** „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà ****
import CardList from 'src/components/CardList'
import Phone from './Phone'
import ButtonList from './ButtonList'
import Button from 'src/components/Button'
// ***** „Ç¢„Ç§„Ç≥„É≥ ****
import { BsFillHeartFill } from 'react-icons/bs' 
import { CgClose } from 'react-icons/cg'
// ***** „Çø„Ç§„Éó„ÄÄ****
import { swipeDirection } from 'src/components/Button'

// Âõ∫ÂÆö„Éá„Éº„Çø
const profiles = [
  {
    name: 'Becky',
    age: '22',
    imageSrc:
      'https://images.unsplash.com/photo-1496440737103-cd596325d314?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',
    bio: 'Looking for some positive moments, adventures and fun üòÅ  Feel free to message me.',
  },
  {
    name: 'Isabella',
    age: '25',
    imageSrc:
      'https://images.unsplash.com/photo-1514315384763-ba401779410f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=660&q=80',
    bio: 'Looking for some positive moments, adventures and fun üêô  Feel free to message me.',
  }, {
    name: 'Mia',
    age: '28',
    imageSrc:
      'https://images.unsplash.com/photo-1563306406-e66174fa3787?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80',
    bio: 'Looking for some positive moments, adventures and fun üê∏  Feel free to message me.',
  },
]

// Âõ∫ÂÆö„Éá„Éº„Çø„Åß„ÉÜ„Çπ„Éà„Åô„Çã„Åü„ÇÅ„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
const App: React.VFC = () => {
  const [isEmpty, setEmpty] = useState<boolean>(false) // „Åô„Åπ„Å¶„ÅÆ„Ç´„Éº„Éâ„Çí‰ªïÂàÜ„Åë„Åß„Åç„Åü„Å®„ÅÑ„ÅÜ‰∫ã„ÇíÂà§Êñ≠„Åô„Çã„Çπ„ÉÜ„Ç§„Éà„ÄÇopacity„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÅÆ„Éà„É™„Ç¨„Éº„Å®„Åó„Å¶‰ΩøÁî®„ÄÇ
  const { opacity } = useSpring({ opacity: isEmpty ? 1 : 0, delay: 500 }) // emptyÊñáÂ≠ó„ÅÆË°®Á§∫ÊôÇ„Å´‰ΩøÁî®„ÄÇ
  const [springProps, setSpringProps] = useSprings(profiles.length, (i) => ({ x: 0 }))  // „Åô„Åπ„Å¶„ÅÆ„Ç´„Éº„Éâ„Å´XÂÄ§„ÅåÂ§âÊõ¥„Åï„Çå„Çã„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíÂä†„Åà„Çã„ÄÇ
  const [swipedBox] = useState(() => new Set()) // „Çπ„ÉØ„Ç§„Éó„Åï„Çå„Åü„Ç´„Éº„Éâ„ÅØswipedBox„Å´ÂÖ•„Çã„ÄÇ

  const bind = useDrag( // „Éâ„É©„ÉÉ„Ç∞ÊôÇ„ÅÆ„Çπ„Éî„Éº„Éâ„ÇÑ‰ΩçÁΩÆ„Å™„Å©„ÅÆÊÉÖÂ†±„ÇíÂèñÂæó„Åó„ÄÅsetSpringProps„Åßx„ÅÆÂÄ§„Çí„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åô„Çã‰∫ã„ÅßÂ∑¶Âè≥„Å´Âãï„Åç„Çí„Å§„Åë„Çã‰∫ã„Åå„Åß„Åç„Çã
    ({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {
      const trigger = velocity > 0.2 // „Ç´„Éº„Éâ„ÅÆ„Çπ„ÉØ„Ç§„Éó„Çπ„Éî„Éº„Éâ„Åå‰∏ÄÂÆö‰ª•‰∏ä„Åß„Çπ„ÉØ„Ç§„ÉóÂèØËÉΩ„Å®„ÅÑ„ÅÜ‰ªÆ„Éï„É©„Ç∞„ÇíÁ´ã„Å¶„Çã => ÈÅÖ„ÅÑÂ†¥Âêà„Çπ„ÉØ„Ç§„Éó„Åï„Çå„Å™„ÅÑ„ÄÇ
      const dir = xDir < 0 ? -1 : 1 // -1„ÅØÂ∑¶„Å´„Çπ„ÉØ„Ç§„Éó„Åï„Çå„Å¶„ÅÑ„Çã„Å®„ÅÑ„ÅÜ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº, +1„ÅØÂè≥„ÄÇ
      if (!down && trigger) swipedBox.add(index) // („Éû„Ç¶„Çπ„ÅåÈõ¢„Åï„Çå„Å¶„ÅÑ„ÇãÔºã„ÄÄÈÄüÂ∫¶„Åå‰∏ÄÂÆö‰ª•‰∏ä„ÅÆÂ†¥Âêà)„ÄÄ=„ÄÄÂÆåÂÖ®„Å´„Çπ„ÉØ„Ç§„Éó„Åï„Çå„Å¶„ÅÑ„Çã„Å®Âà§Êñ≠„Åó„ÄÅ‰ª•Èôç„Åß„Çπ„ÉØ„Ç§„Éó„Çí„Éà„É™„Ç¨„Éº„Åï„Åõ„Çã„ÄÇ
      setSpringProps.start((i) => {
        if (index !== i) return // „Å©„ÅÆ„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíÈÅ©Áî®„Åï„Åõ„Çã„ÅãÁâπÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ
        const isGone = swipedBox.has(index)
        const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0 // ÂÆåÂÖ®„Å´„Çπ„ÉØ„Ç§„Éó„Åï„Çå„Å¶„ÅÑ„Çã„Å®Âà§Êñ≠„Åï„Çå„Åü„Ç´„Éº„Éâ„ÅØÂ∑¶Âè≥„Å©„Å°„Çâ„Åã„Å´Âºæ„ÅçÂá∫„Åï„Çå„Çã„ÄÇ
        return { x, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }}
      })
      if (!down && swipedBox.size === profiles.length) setEmpty(true) // „Çπ„ÉØ„Ç§„Éó„Åß„Åç„Çã„Ç´„Éº„Éâ„Åå„Å™„Åè„Å™„Å£„Åü‰∫ã„ÇíÂà§Êñ≠„Åô„Çã
    }
  )

  const handleSwipeButtonClick = (dir: swipeDirection) => { // „Éú„Çø„É≥„ÅåÊäº„Åï„Çå„ÅüÊôÇ„ÅÆÈñ¢Êï∞„ÄÇuseDrag„Å®Âêå„ÅèsetSpringProps„ÅßXÂÄ§„Çí„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åô„Çã‰∫ã„ÅßÂ∑¶Âè≥„Å´Âãï„Åç„Çí„Å§„Åë„Å¶„ÅÑ„Çã„ÄÇ
    const curIndex = profiles.length - swipedBox.size - 1
    swipedBox.add(curIndex)
    setSpringProps.start((i) => {
      if (curIndex !== i) return
      const x = dir === 'left' ? (200 + window.innerWidth) * -1 : 200 + window.innerWidth
      return { x, config: { friction: 200, tension: 200 } }
    })
    if (swipedBox.size === profiles.length) setEmpty(true)
  }

  return (
    <div
      css={css`
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #cee4f4;
      `}
    >
      <Global
        styles={css`
          ${emotionReset}
          *, *::after, *::before {
            box-sizing: border-box;
          }
        `}
      />

      <Phone isEmpty={isEmpty} opacity={opacity}> 
         <CardList profiles={profiles} springProps={springProps} bind={bind} />
         <ButtonList>
          <Button position={'left'} onClick={handleSwipeButtonClick}>
              <CgClose css={css`width: 40px; height: 40px; color: #1e7ec3;`}/>
            </Button>
            <Button position={'right'} onClick={handleSwipeButtonClick}>
              <BsFillHeartFill css={css`width: 30px; height: 30px; color: #cb1d5b;`}/>
            </Button>
          </ButtonList>
      </Phone>
    </div>
  )
}

export default App